//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartHaiShu_WebApp.NewsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsModel", Namespace="http://schemas.datacontract.org/2004/07/CityInfoScreenWcf")]
    [System.SerializableAttribute()]
    public partial class NewsModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AutoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckMemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CheckedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifyTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AutoID {
            get {
                return this.AutoIDField;
            }
            set {
                if ((this.AutoIDField.Equals(value) != true)) {
                    this.AutoIDField = value;
                    this.RaisePropertyChanged("AutoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckMemo {
            get {
                return this.CheckMemoField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckMemoField, value) != true)) {
                    this.CheckMemoField = value;
                    this.RaisePropertyChanged("CheckMemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Checked {
            get {
                return this.CheckedField;
            }
            set {
                if ((this.CheckedField.Equals(value) != true)) {
                    this.CheckedField = value;
                    this.RaisePropertyChanged("Checked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Checker {
            get {
                return this.CheckerField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckerField, value) != true)) {
                    this.CheckerField = value;
                    this.RaisePropertyChanged("Checker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contents {
            get {
                return this.ContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentsField, value) != true)) {
                    this.ContentsField = value;
                    this.RaisePropertyChanged("Contents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataSource {
            get {
                return this.DataSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceField, value) != true)) {
                    this.DataSourceField = value;
                    this.RaisePropertyChanged("DataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTypeField, value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hot {
            get {
                return this.HotField;
            }
            set {
                if ((object.ReferenceEquals(this.HotField, value) != true)) {
                    this.HotField = value;
                    this.RaisePropertyChanged("Hot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifyTime {
            get {
                return this.LastModifyTimeField;
            }
            set {
                if ((this.LastModifyTimeField.Equals(value) != true)) {
                    this.LastModifyTimeField = value;
                    this.RaisePropertyChanged("LastModifyTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsService.INews")]
    public interface INews {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INews/ExsitesNews", ReplyAction="http://tempuri.org/INews/ExsitesNewsResponse")]
        bool ExsitesNews(long AutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INews/GetNewsById", ReplyAction="http://tempuri.org/INews/GetNewsByIdResponse")]
        SmartHaiShu_WebApp.NewsService.NewsModel GetNewsById(long AutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INews/FindNewss", ReplyAction="http://tempuri.org/INews/FindNewssResponse")]
        SmartHaiShu_WebApp.NewsService.NewsModel[] FindNewss(SmartHaiShu_WebApp.NewsService.NewsModel findEntity, string filedOrder, System.Nullable<bool> desc, int pageSize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INews/GetNewssCounts", ReplyAction="http://tempuri.org/INews/GetNewssCountsResponse")]
        int GetNewssCounts(SmartHaiShu_WebApp.NewsService.NewsModel findEntity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsChannel : SmartHaiShu_WebApp.NewsService.INews, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsClient : System.ServiceModel.ClientBase<SmartHaiShu_WebApp.NewsService.INews>, SmartHaiShu_WebApp.NewsService.INews {
        
        public NewsClient() {
        }
        
        public NewsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ExsitesNews(long AutoID) {
            return base.Channel.ExsitesNews(AutoID);
        }
        
        public SmartHaiShu_WebApp.NewsService.NewsModel GetNewsById(long AutoID) {
            return base.Channel.GetNewsById(AutoID);
        }
        
        public SmartHaiShu_WebApp.NewsService.NewsModel[] FindNewss(SmartHaiShu_WebApp.NewsService.NewsModel findEntity, string filedOrder, System.Nullable<bool> desc, int pageSize, int pageIndex) {
            return base.Channel.FindNewss(findEntity, filedOrder, desc, pageSize, pageIndex);
        }
        
        public int GetNewssCounts(SmartHaiShu_WebApp.NewsService.NewsModel findEntity) {
            return base.Channel.GetNewssCounts(findEntity);
        }
    }
}
