//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace SmartHaiShu.CityScreenServices.TrafficVioService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TrafficVioServiceSoap", Namespace="http://tempuri.org/")]
    public partial class TrafficVioService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecodePicOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TrafficVioService() {
            this.Url = global::SmartHaiShu.CityScreenServices.Properties.Settings.Default.SmartHaiShu_CityScreenServices_TrafficVioService_TrafficVioService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginPassCompletedEventHandler LoginPassCompleted;
        
        /// <remarks/>
        public event GetSecodePicCompletedEventHandler GetSecodePicCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginPass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TrafficVio[] LoginPass(string LicenceNo, string FrameNO, string seCode, string vhcType, out string msg) {
            object[] results = this.Invoke("LoginPass", new object[] {
                        LicenceNo,
                        FrameNO,
                        seCode,
                        vhcType});
            msg = ((string)(results[1]));
            return ((TrafficVio[])(results[0]));
        }
        
        /// <remarks/>
        public void LoginPassAsync(string LicenceNo, string FrameNO, string seCode, string vhcType) {
            this.LoginPassAsync(LicenceNo, FrameNO, seCode, vhcType, null);
        }
        
        /// <remarks/>
        public void LoginPassAsync(string LicenceNo, string FrameNO, string seCode, string vhcType, object userState) {
            if ((this.LoginPassOperationCompleted == null)) {
                this.LoginPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginPassOperationCompleted);
            }
            this.InvokeAsync("LoginPass", new object[] {
                        LicenceNo,
                        FrameNO,
                        seCode,
                        vhcType}, this.LoginPassOperationCompleted, userState);
        }
        
        private void OnLoginPassOperationCompleted(object arg) {
            if ((this.LoginPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginPassCompleted(this, new LoginPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSecodePic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSecodePic() {
            object[] results = this.Invoke("GetSecodePic", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSecodePicAsync() {
            this.GetSecodePicAsync(null);
        }
        
        /// <remarks/>
        public void GetSecodePicAsync(object userState) {
            if ((this.GetSecodePicOperationCompleted == null)) {
                this.GetSecodePicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecodePicOperationCompleted);
            }
            this.InvokeAsync("GetSecodePic", new object[0], this.GetSecodePicOperationCompleted, userState);
        }
        
        private void OnGetSecodePicOperationCompleted(object arg) {
            if ((this.GetSecodePicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecodePicCompleted(this, new GetSecodePicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TrafficVio {
        
        private string licenceNOField;
        
        private string vehicleTypeField;
        
        private string vioDateField;
        
        private string vioLocationField;
        
        private string scoreField;
        
        private string vioBehaviorField;
        
        private string penaltyField;
        
        private string dptField;
        
        /// <remarks/>
        public string LicenceNO {
            get {
                return this.licenceNOField;
            }
            set {
                this.licenceNOField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string VioDate {
            get {
                return this.vioDateField;
            }
            set {
                this.vioDateField = value;
            }
        }
        
        /// <remarks/>
        public string VioLocation {
            get {
                return this.vioLocationField;
            }
            set {
                this.vioLocationField = value;
            }
        }
        
        /// <remarks/>
        public string Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
        
        /// <remarks/>
        public string VioBehavior {
            get {
                return this.vioBehaviorField;
            }
            set {
                this.vioBehaviorField = value;
            }
        }
        
        /// <remarks/>
        public string Penalty {
            get {
                return this.penaltyField;
            }
            set {
                this.penaltyField = value;
            }
        }
        
        /// <remarks/>
        public string Dpt {
            get {
                return this.dptField;
            }
            set {
                this.dptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LoginPassCompletedEventHandler(object sender, LoginPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrafficVio[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrafficVio[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSecodePicCompletedEventHandler(object sender, GetSecodePicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecodePicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecodePicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591